{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "defaultValue": "boshstorage"
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "boshdev1"
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "bosh@123"
    },
    "location": {
      "type": "String",
      "defaultValue": "West US"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1"
    },
    "imageUri": {
      "type": "string",
      "defaultValue": "http://qingfubosh10.blob.core.windows.net/vhds/osdisk.vhd"
    },
    "vmName": {
      "type": "string",
      "defaultValue": "bosh_vm1"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "myVNET"
    }
  },
  "variables": {
    "nicName":"[parameters('vmName')]",
    "publicIPAddressName": "[parameters('vmName')]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet2Name": "Subnet-2",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet2Prefix": "10.0.1.0/24",
    "vmStorageAccountContainerName": "vhds",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
     "storageid": "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2014-12-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-microbosh')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-bosh')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-cf')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "provisionVMAgent": "true"
          }

        },
        "storageProfile": {
          "sourceImage": {
            "id": "[concat('/', subscription().subscriptionId,'/services/images/','b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150416-en-us-30GB')]"
          },
          "destinationVhdsContainer": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/','vmdisk','/')]",
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "30",
              "lun": 0,
              "createOption": "empty",
              "vhd": { "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'datadisk1.vhd')]" }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/newuserscript')]",
      "apiVersion": "2014-12-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/qingfuwang/azurermtemplates/master/101-simple-vm-from-image/launch_script.sh"
          ],
           "commandToExecute": "sh launch_script.sh https://raw.githubusercontent.com/qingfuwang/azurermtemplates/master/101-simple-vm-from-image",
          "newStorageAccountName:":"[parameters('newStorageAccountName')]",
          "virtualNetworkName":"[parameters('virtualNetworkName')]",
          "storagekey":"[listKeys(variables('storageid'),'2014-12-01-preview').key1]",
          "vnet":"[parameters('virtualNetworkName')]",
          "subnet":"Subnet-1",
          "vip": "[reference(concat(parameters('vmName'),'-microbosh')).ipAddress]",
          "microboship": "[reference(concat(parameters('vmName'),'-microbosh')).ipAddress]",
          "boship": "[reference(concat(parameters('vmName'),'-bosh')).ipAddress]",
          "cfip":"[reference(concat(parameters('vmName'),'-cf')).ipAddress]",
          "ip":"10.0.0.10",
          "storageaccount":"[parameters('newStorageAccountName')]",
          "subscriptionid":"[subscription().subscriptionId]",
          "username":"[parameters('adminUserName')]",
          "stemcell": "[parameters('imageUri')]",
          "some_id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
        }
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "bosh",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "bosh_tcp_22",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 3002,
              "direction": "Inbound"
            }
          },
          {
            "name": "bosh_tcp_2555",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2555",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 3001,
              "direction": "Inbound"
            }
          },
          {
            "name": "bosh_tcp_6868",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "6868",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 3000,
              "direction": "Inbound"
            }
          }
        ]

      }
    }
  ]
}

